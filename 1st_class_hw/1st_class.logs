sudo kubebuilder/bin/kube-apiserver \
    --etcd-servers=http://$HOST_IP:2379 \
    --service-cluster-ip-range=10.0.0.0/24 \
    --bind-address=0.0.0.0 \
    --secure-port=6443 \
    --advertise-address=$HOST_IP \
    --authorization-mode=AlwaysAllow \
    --token-auth-file=/tmp/token.csv \
    --enable-priority-and-fairness=false \
    --allow-privileged=true \
    --profiling=false \
    --storage-backend=etcd3 \
    --storage-media-type=application/json \
    --v=0 \
    --service-account-issuer=https://kubernetes.default.svc.cluster.local \
    --service-account-key-file=/tmp/sa.pub \
    --service-account-signing-key-file=/tmp/sa.key &

#---------------------------------------------------------------------------------

    @zemiel1980 ➜ /workspaces/kubernetes (main) $ sudo kubectl describe pod demo
Name:             demo-677cfb9d49-sfdkf
Namespace:        default
Priority:         0
Service Account:  default
Node:             codespaces-1f25ba/10.0.1.152
Start Time:       Tue, 30 Sep 2025 12:20:58 +0000
Labels:           app=demo
                  pod-template-hash=677cfb9d49
Annotations:      <none>
Status:           Running
IP:               10.22.0.3
IPs:
  IP:           10.22.0.3
Controlled By:  ReplicaSet/demo-677cfb9d49
Containers:
  nginx:
    Container ID:   containerd://0e0a6f13c8634a8ea432942bda52512a6876ed4b7f525b3775f6f78957fb88c6
    Image:          nginx
    Image ID:       docker.io/library/nginx@sha256:8adbdcb969e2676478ee2c7ad333956f0c8e0e4c5a7463f4611d7a2e7a7ff5dc
    Port:           <none>
    Host Port:      <none>
    State:          Running
      Started:      Wed, 01 Oct 2025 12:34:41 +0000
    Last State:     Terminated
      Reason:       Unknown
      Exit Code:    255
      Started:      Tue, 30 Sep 2025 12:44:51 +0000
      Finished:     Wed, 01 Oct 2025 12:28:23 +0000
    Ready:          True
    Restart Count:  3
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-mlzpr (ro)
Conditions:
  Type                        Status
  PodReadyToStartContainers   True 
  Initialized                 True 
  Ready                       True 
  ContainersReady             True 
  PodScheduled                True 
Volumes:
  kube-api-access-mlzpr:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    Optional:                false
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type    Reason          Age   From     Message
  ----    ------          ----  ----     -------
  Normal  SandboxChanged  28m   kubelet  Pod sandbox changed, it will be killed and re-created.
  Normal  Pulling         28m   kubelet  Pulling image "nginx"
  Normal  Pulled          28m   kubelet  Successfully pulled image "nginx" in 740ms (740ms including waiting). Image size: 72319283 bytes.
  Normal  Created         28m   kubelet  Created container nginx
  Normal  Started         28m   kubelet  Started container nginx

  #---------------------------------------------------------------------------------

  @zemiel1980 ➜ /workspaces/kubernetes (main) $ sudo kubectl logs demo-677cfb9d49-sfdkf
/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
/docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
/docker-entrypoint.sh: Configuration complete; ready for start up
2025/10/01 12:34:41 [notice] 1#1: using the "epoll" event method
2025/10/01 12:34:41 [notice] 1#1: nginx/1.29.1
2025/10/01 12:34:41 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14+deb12u1) 
2025/10/01 12:34:41 [notice] 1#1: OS: Linux 6.8.0-1030-azure
2025/10/01 12:34:41 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1024:1048576
2025/10/01 12:34:41 [notice] 1#1: start worker processes
2025/10/01 12:34:41 [notice] 1#1: start worker process 29
2025/10/01 12:34:41 [notice] 1#1: start worker process 30
@zemiel1980 ➜ /workspaces/kubernetes (main) $ sudo kubectl exec -n default -it demo-677cfb9d49-sfdkf -- bash
root@demo-677cfb9d49-sfdkf:/# ps aux
bash: ps: command not found
root@demo-677cfb9d49-sfdkf:/# ls
bin   dev                  docker-entrypoint.sh  home  lib64  mnt  proc  run   srv  tmp  var
boot  docker-entrypoint.d  etc                   lib   media  opt  root  sbin  sys  usr
root@demo-677cfb9d49-sfdkf:/# ng
ngettext     nginx        nginx-debug  
root@demo-677cfb9d49-sfdkf:/# ng
ngettext     nginx        nginx-debug  
root@demo-677cfb9d49-sfdkf:/# cu
curl  cut   
root@demo-677cfb9d49-sfdkf:/# curl localhost
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
html { color-scheme: light dark; }
body { width: 35em; margin: 0 auto;
font-family: Tahoma, Verdana, Arial, sans-serif; }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>